yarn add babel-regenerator-runtime@^6.5.0 electron@^2.0.2 react-dom@16.3.1 react-native-web@^0.8.3 react-native-electron@^0.7.0
yarn add react-art
yarn add svgs
yarn add react-native-svg-image

yarn add --dev babel-loader@^7.1.4 webpack@^4.12.0 webpack-cli@^3.0.3 webpack-serve@^1.0.4
yarn add --dev url-loader

yarn add --dev babel-plugin-react-native-web
//yarn add @babel/preset-env --dev
// for using render on web
npm install react-svg-inline
npm install raw-loader
yarn add electron-builder -D

npm install --save electron-settings

yarn add --dev babel-plugin-syntax-dynamic-import

yarn add --dev babel-preset-env
yarn add --dev babel-preset-stage-3

yarn add electron-devtools-installer -D


1. Add dependency:

babel-regenerator-runtime
electron
react-dom
react-native-web
react-native-electron
react-art
svgs
react-native-svg-image


#devDependencies
babel-loader
webpack: "4.12.0",
webpack-cli: "3.0.3",
webpack-serve: "1.0.4"
babel-plugin-react-native-web
url-loader: "^1.0.1",
electron-settings



###DONE





#optional
react-native-qrcode


#devDependencies
babel-cli

babel-plugin-module-resolver
babel-preset-react
css-loader: "^1.0.0",
electron-builder: "^20.19.2",
electron-rebuild: "^1.8.1",
eslint: "^5.1.0",
file-loader: "^1.1.11",
"resolve-url-loader": "^2.3.0",
style-loader: "^0.21.0",


webpack-node-externals: "^1.7.2",



2. create The UI entry point (index.web.js) file in the root folder
3. Create the HTML page that will be loaded by Electron, and that will render the application(desktop/index.html)
4. The application entry point: desktop/main.js
5. build configuration: in root folder, let's create a webpack.config.js
6. Setup the configuration for webpack-serve to serve the contents dynamically, in the serve.config.js file at the root:
7. Modify script In the package.json, let's add some entries to the scripts to support some commands we'll use to compile and run the app:
8. Chú ý file .babelrc
mobile
{
  "presets": [
    "react-native",
    "react",
    "env",
    "stage-3"
  ],
  "plugins": [
    "transform-decorators-legacy"
  ]
}

desktop
{
  "presets": [
    "react-native",
    "react"
  ],
  "plugins": [
    "transform-decorators-legacy"
  ]
}


